---
# ServingRuntime
apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
metadata:
  annotations:
    opendatahub.io/accelerator-name: migrated-gpu
    opendatahub.io/apiProtocol: REST
    opendatahub.io/hardware-profile-name: migrated-gpu-mglzi-serving
    opendatahub.io/recommended-accelerators: '["nvidia.com/gpu"]'
    opendatahub.io/runtime-version: v0.9.1.0
    opendatahub.io/serving-runtime-scope: global
    opendatahub.io/template-display-name: vLLM NVIDIA GPU ServingRuntime for KServe
    opendatahub.io/template-name: vllm-cuda-runtime
    openshift.io/display-name: llama-32-3b-instruct
  labels:
    opendatahub.io/dashboard: "true"
  name: llama-32-3b-instruct
  namespace: models
spec:
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
  containers:
  - args:
    - --port=8080
    - --model=/mnt/models
    - --served-model-name={{.Name}}
    command:
    - python
    - -m
    - vllm.entrypoints.openai.api_server
    env:
    - name: HF_HOME
      value: /tmp/hf_home
    image: quay.io/modh/vllm@sha256:56aa86c6ed6ba6cc9557a8583ff9d4ee535193f6cda030bd1268064bc70120e3
    name: kserve-container
    ports:
    - containerPort: 8080
      protocol: TCP
    volumeMounts:
    - mountPath: /dev/shm
      name: shm
  multiModel: false
  supportedModelFormats:
  - autoSelect: true
    name: vLLM
  volumes:
  - emptyDir:
      medium: Memory
      sizeLimit: 2Gi
    name: shm
---
# InferenceService
apiVersion: serving.kserve.io/v1beta1
kind: InferenceService
metadata:
  annotations:
    openshift.io/display-name: llama-3.2-3b-instruct
    security.opendatahub.io/enable-auth: "true"
    serving.kserve.io/deploymentMode: RawDeployment
  labels:
    networking.kserve.io/visibility: exposed
    opendatahub.io/dashboard: "true"
  name: llama-32-3b-instruct
  namespace: models
spec:
  predictor:
    automountServiceAccountToken: false
    maxReplicas: 1
    minReplicas: 1
    model:
      args:
      - --dtype=half
      - --max-model-len=20000
      - --gpu-memory-utilization=0.95
      - --enable-chunked-prefill
      - --enable-auto-tool-choice
      - --tool-call-parser=llama3_json
      - --chat-template=/app/data/template/tool_chat_template_llama3.2_json.jinja
      modelFormat:
        name: vLLM
      name: ""
      resources:
        limits:
          cpu: "1"
          memory: 4Gi
          nvidia.com/gpu: "2"
        requests:
          cpu: "1"
          memory: 4Gi
          nvidia.com/gpu: "2"
      runtime: llama-32-3b-instruct
      storageUri: oci://quay.io/redhat-ai-services/modelcar-catalog:llama-3.2-3b-instruct
    tolerations:
    - effect: NoSchedule
      key: nvidia.com/gpu
      operator: Exists
